class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        int n = matrix[0].length;
        if(matrix.length == 0){
            return false;
        }
        int low = 0;
        int high = (m*n)-1;

        while(low<=high){
            int middle = (high+low)/2;
            int middleElement = matrix[middle/n][middle%n ];
            if(middleElement == target){
                return true;
            }
            else if(middleElement < target){
                low = middle+1;
            }
            else{
                high = middle-1;
            }
        }
        return false;




    }
}


        // NAIVE SOLN
        /*
        int m = matrix.length;
        int n = matrix[0].length;
        for(int i=0;i<m ;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j] == target){
                    return true;
                }
            }
        }
        return false;
    }
}

*/
