class Solution {


    int f(int t, int [] arr, int n, int dp[][]){

        if(n==0){
            if(t%arr[0] == 0){
                return 1;
            }
        }
        if(n<0){
            return 0;
        }
        if(dp[n][t] !=-1){
            return dp[n][t];
        }
        
        int notTake = f(t, arr, n-1,dp);
        int take =0;
        if(arr[n]<=t){
            take = f(t-arr[n], arr, n,dp);
        }
        
        
        return dp[n][t] = take + notTake;
    }



    public int change(int amount, int[] coins) {
        int n = coins.length;
        int dp[][] = new int[n][amount+1];
        for(int i=0;i<n;i++){
            for(int j=0;j<=amount;j++){
                dp[i][j] =-1;
            }
        }
        
        return f(amount, coins, n-1,dp);

    }
}
